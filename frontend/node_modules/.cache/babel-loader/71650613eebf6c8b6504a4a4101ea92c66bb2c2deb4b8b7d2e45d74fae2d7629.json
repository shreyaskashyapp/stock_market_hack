{"ast":null,"code":"var _jsxFileName = \"/home/kashyap_sri/Desktop/Shreyas/stock_market/frontend/src/Components/bot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Bot(props) {\n  _s();\n  const [name, setName] = useState('');\n  function handleOptionChange(event) {\n    setName(event.target.value);\n  }\n  ;\n  function sentiment() {}\n  if (name === \"SENTIMENT\") {\n    return sentiment();\n  }\n  useEffect(() => {\n    fetchData().then(data => {\n      console.log(data.feed);\n      console.log(data.feed[0].ticker_sentiment[0].ticker_sentiment_label);\n      setSentiment(data.feed[0].ticker_sentiment[0].ticker_sentiment_label);\n      setNews(data.feed[0].url);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Strategy: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"strategy\",\n          id: \"strategy\",\n          onChange: handleOptionChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SENTIMENT\",\n            children: \"SENTIMENT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SMA\",\n            children: \"SMA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Bot, \"nVbhOIYDoHElhkRqYpJCqH0DXNE=\");\n_c = Bot;\nvar _c;\n$RefreshReg$(_c, \"Bot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Bot","props","_s","name","setName","handleOptionChange","event","target","value","sentiment","fetchData","then","data","console","log","feed","ticker_sentiment","ticker_sentiment_label","setSentiment","setNews","url","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","_c","$RefreshReg$"],"sources":["/home/kashyap_sri/Desktop/Shreyas/stock_market/frontend/src/Components/bot.js"],"sourcesContent":["import React, {useState,useEffect} from 'react';\n\nexport default function Bot(props) {\n  const [name, setName] = useState('');\n\n  function handleOptionChange(event){\n    setName(event.target.value);\n  };\n\n  function sentiment(){\n\n  }\n\n  if(name===\"SENTIMENT\"){\n    return sentiment()\n  }\n  \n  useEffect(()=>{\n    fetchData()\n      .then((data) => {\n        console.log(data.feed)\n        console.log(data.feed[0].ticker_sentiment[0].ticker_sentiment_label)\n        setSentiment(data.feed[0].ticker_sentiment[0].ticker_sentiment_label)\n        setNews(data.feed[0].url)\n      })\n},[])\n\n  return (\n    <div>\n      <div className=\"bot-container\">\n        <div>\n          Strategy: {name}\n        </div>\n        <div className=\"options\">\n          <select name=\"strategy\" id=\"strategy\" onChange={handleOptionChange}>\n            <option value=\"SENTIMENT\">SENTIMENT</option>\n            <option value=\"SMA\">SMA</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,SAASS,kBAAkBA,CAACC,KAAK,EAAC;IAChCF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B;EAAC;EAED,SAASC,SAASA,CAAA,EAAE,CAEpB;EAEA,IAAGN,IAAI,KAAG,WAAW,EAAC;IACpB,OAAOM,SAAS,CAAC,CAAC;EACpB;EAEAZ,SAAS,CAAC,MAAI;IACZa,SAAS,CAAC,CAAC,CACRC,IAAI,CAAEC,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,IAAI,CAAC;MACtBF,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC,CAACC,gBAAgB,CAAC,CAAC,CAAC,CAACC,sBAAsB,CAAC;MACpEC,YAAY,CAACN,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC,CAACC,gBAAgB,CAAC,CAAC,CAAC,CAACC,sBAAsB,CAAC;MACrEE,OAAO,CAACP,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC,CAACK,GAAG,CAAC;IAC3B,CAAC,CAAC;EACR,CAAC,EAAC,EAAE,CAAC;EAEH,oBACErB,OAAA;IAAAsB,QAAA,eACEtB,OAAA;MAAKuB,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC5BtB,OAAA;QAAAsB,QAAA,GAAK,YACO,EAAClB,IAAI;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACN3B,OAAA;QAAKuB,SAAS,EAAC,SAAS;QAAAD,QAAA,eACtBtB,OAAA;UAAQI,IAAI,EAAC,UAAU;UAACwB,EAAE,EAAC,UAAU;UAACC,QAAQ,EAAEvB,kBAAmB;UAAAgB,QAAA,gBACjEtB,OAAA;YAAQS,KAAK,EAAC,WAAW;YAAAa,QAAA,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5C3B,OAAA;YAAQS,KAAK,EAAC,KAAK;YAAAa,QAAA,EAAC;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CAxCuBF,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}