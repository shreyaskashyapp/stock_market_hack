{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Documents\\\\GitHub\\\\stock_market\\\\frontend\\\\src\\\\Components\\\\sma.js\";\nimport react from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SMA() {\n  const fetch = require(\"node-fetch\");\n  async function getMeanClose() {\n    const url = \"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=AAPL&apikey=Q9B5DSCXOI33L4CV\";\n    const response = await fetch(url);\n    const data = await response.json();\n    const timeSeries = data[\"Time Series (Daily)\"];\n    const closeValues = Object.values(timeSeries).slice(0, 20).map(day => parseFloat(day[\"4. close\"]));\n    const meanClose = closeValues.reduce((sum, value) => sum + value, 0) / closeValues.length;\n    console.log(\"Mean of last 20 close values:\", meanClose);\n  }\n  getMeanClose();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"SMA\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n_c = SMA;\nvar _c;\n$RefreshReg$(_c, \"SMA\");","map":{"version":3,"names":["react","jsxDEV","_jsxDEV","SMA","fetch","require","getMeanClose","url","response","data","json","timeSeries","closeValues","Object","values","slice","map","day","parseFloat","meanClose","reduce","sum","value","length","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/admin/Documents/GitHub/stock_market/frontend/src/Components/sma.js"],"sourcesContent":["import react from \"react\";\r\n\r\nexport default function SMA() {\r\n  const fetch = require(\"node-fetch\");\r\n\r\n  async function getMeanClose() {\r\n    const url =\r\n      \"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=AAPL&apikey=Q9B5DSCXOI33L4CV\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    const timeSeries = data[\"Time Series (Daily)\"];\r\n\r\n    const closeValues = Object.values(timeSeries)\r\n      .slice(0, 20)\r\n      .map((day) => parseFloat(day[\"4. close\"]));\r\n    const meanClose =\r\n      closeValues.reduce((sum, value) => sum + value, 0) / closeValues.length;\r\n\r\n    console.log(\"Mean of last 20 close values:\", meanClose);\r\n  }\r\n\r\n  getMeanClose();\r\n\r\n  return <div>SMA</div>;\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,MAAMC,KAAK,GAAGC,OAAO,CAAC,YAAY,CAAC;EAEnC,eAAeC,YAAYA,CAAA,EAAG;IAC5B,MAAMC,GAAG,GACP,2GAA2G;IAC7G,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACG,GAAG,CAAC;IACjC,MAAME,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;IAClC,MAAMC,UAAU,GAAGF,IAAI,CAAC,qBAAqB,CAAC;IAE9C,MAAMG,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACH,UAAU,CAAC,CAC1CI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CACZC,GAAG,CAAEC,GAAG,IAAKC,UAAU,CAACD,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IAC5C,MAAME,SAAS,GACbP,WAAW,CAACQ,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,EAAE,CAAC,CAAC,GAAGV,WAAW,CAACW,MAAM;IAEzEC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEN,SAAS,CAAC;EACzD;EAEAb,YAAY,CAAC,CAAC;EAEd,oBAAOJ,OAAA;IAAAwB,QAAA,EAAK;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACvB;AAACC,EAAA,GAtBuB5B,GAAG;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}