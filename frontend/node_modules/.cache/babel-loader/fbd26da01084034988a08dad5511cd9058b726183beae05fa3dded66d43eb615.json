{"ast":null,"code":"var _jsxFileName = \"/home/kashyap_sri/Desktop/Shreyas/stock_market/frontend/src/Components/ticker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst proxy = \"https://cors-anywhere.herokuapp.com/\";\nconst apiUrl = \"https://query1.finance.yahoo.com/v8/finance/chart/AAPL?symbol=AAPL&period1=1634841000&period2=1660501800&useYfid=true&interval=1d&includePrePost=true&events=div%7Csplit%7Cearn&lang=en-US&region=US&crumb=m%2FlQLK.F88U&corsDomain=finance.yahoo.com\";\nconst reddit = \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=AAPL&interval=1min&apikey=Q9B5DSCXOI33L4CV.\";\nconst newUrl = `${proxy}${reddit}`;\nasync function fetchData() {\n  const response = await fetch(\"http://localhost:8081\");\n  return response.json();\n}\nexport default function Ticker() {\n  _s();\n  const [price, setPrice] = useState(0);\n  const [series, setSeries] = useState([{\n    data: []\n  }]);\n  const [chartOptions, setChartOptions] = useState({\n    // ...\n  });\n  const chartRef = useRef(null);\n  const rangeRef = useRef(null);\n  useEffect(() => {\n    let timeoutId;\n    async function getLatestPrice() {\n      try {\n        const data = await fetchData();\n        console.log(data);\n        const stock = data.chart.result[0];\n        setPrice(stock.meta.regularMarketPrice.toFixed(2));\n        const quote = stock.indicators.quote[0];\n        const prices = stock.timestamp.map((timestamp, index) => ({\n          x: new Date(timestamp * 1000),\n          y: [quote.open[index], quote.high[index], quote.low[index], quote.close[index]]\n        }));\n        setSeries(prevSeries => {\n          // Append new prices to the existing series\n          const updatedSeries = [...prevSeries];\n          updatedSeries[0].data = [...updatedSeries[0].data, ...prices];\n          return updatedSeries;\n        });\n        const currentRange = rangeRef.current;\n        setChartOptions(prevOptions => ({\n          ...prevOptions,\n          xaxis: {\n            ...prevOptions.xaxis,\n            range: currentRange // Retain the zoom level\n          }\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n      timeoutId = setTimeout(getLatestPrice, 5000 * 2);\n    }\n    getLatestPrice();\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, []);\n  const handleChartUpdate = () => {\n    if (chartRef.current) {\n      rangeRef.current = chartRef.current.getOption().xaxis.range;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Ticker\", price, /*#__PURE__*/_jsxDEV(Chart, {\n      options: chartOptions,\n      series: series,\n      type: \"candlestick\",\n      width: \"100%\",\n      height: 320,\n      ref: chartRef,\n      onUpdated: handleChartUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(Ticker, \"K4RoDVF5R6QykB0J3mhbOK3AwZ8=\");\n_c = Ticker;\nvar _c;\n$RefreshReg$(_c, \"Ticker\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Chart","jsxDEV","_jsxDEV","proxy","apiUrl","reddit","newUrl","fetchData","response","fetch","json","Ticker","_s","price","setPrice","series","setSeries","data","chartOptions","setChartOptions","chartRef","rangeRef","timeoutId","getLatestPrice","console","log","stock","chart","result","meta","regularMarketPrice","toFixed","quote","indicators","prices","timestamp","map","index","x","Date","y","open","high","low","close","prevSeries","updatedSeries","currentRange","current","prevOptions","xaxis","range","error","setTimeout","clearTimeout","handleChartUpdate","getOption","children","options","type","width","height","ref","onUpdated","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kashyap_sri/Desktop/Shreyas/stock_market/frontend/src/Components/ticker.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Chart from 'react-apexcharts';\n\nconst proxy = \"https://cors-anywhere.herokuapp.com/\";\nconst apiUrl = \"https://query1.finance.yahoo.com/v8/finance/chart/AAPL?symbol=AAPL&period1=1634841000&period2=1660501800&useYfid=true&interval=1d&includePrePost=true&events=div%7Csplit%7Cearn&lang=en-US&region=US&crumb=m%2FlQLK.F88U&corsDomain=finance.yahoo.com\";\nconst reddit = \"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol=AAPL&interval=1min&apikey=Q9B5DSCXOI33L4CV.\";\nconst newUrl = `${proxy}${reddit}`;\n\nasync function fetchData() {\n  const response = await fetch(\"http://localhost:8081\");\n  return response.json();\n}\n\nexport default function Ticker() {\n  const [price, setPrice] = useState(0);\n  const [series, setSeries] = useState([{ data: [] }]);\n  const [chartOptions, setChartOptions] = useState({\n    // ...\n  });\n  const chartRef = useRef(null);\n  const rangeRef = useRef(null);\n\n  useEffect(() => {\n    let timeoutId;\n\n    async function getLatestPrice() {\n      try {\n        const data = await fetchData();\n        console.log(data);\n        const stock = data.chart.result[0];\n        setPrice(stock.meta.regularMarketPrice.toFixed(2));\n        const quote = stock.indicators.quote[0];\n        const prices = stock.timestamp.map((timestamp, index) => ({\n          x: new Date(timestamp * 1000),\n          y: [quote.open[index], quote.high[index], quote.low[index], quote.close[index]]\n        }));\n\n        setSeries(prevSeries => {\n          // Append new prices to the existing series\n          const updatedSeries = [...prevSeries];\n          updatedSeries[0].data = [...updatedSeries[0].data, ...prices];\n          return updatedSeries;\n        });\n\n        const currentRange = rangeRef.current;\n        setChartOptions(prevOptions => ({\n          ...prevOptions,\n          xaxis: {\n            ...prevOptions.xaxis,\n            range: currentRange // Retain the zoom level\n          }\n        }));\n      } catch (error) {\n        console.log(error);\n      }\n      timeoutId = setTimeout(getLatestPrice, 5000 * 2);\n    }\n\n    getLatestPrice();\n\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, []);\n\n  const handleChartUpdate = () => {\n    if (chartRef.current) {\n      rangeRef.current = chartRef.current.getOption().xaxis.range;\n    }\n  };\n\n  return (\n    <div>\n      Ticker\n      {price}\n      <Chart\n        options={chartOptions}\n        series={series}\n        type=\"candlestick\"\n        width=\"100%\"\n        height={320}\n        ref={chartRef}\n        onUpdated={handleChartUpdate}\n      />\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,KAAK,GAAG,sCAAsC;AACpD,MAAMC,MAAM,GAAG,uPAAuP;AACtQ,MAAMC,MAAM,GAAG,oHAAoH;AACnI,MAAMC,MAAM,GAAI,GAAEH,KAAM,GAAEE,MAAO,EAAC;AAElC,eAAeE,SAASA,CAAA,EAAG;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,CAAC;EACrD,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB;AAEA,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,CAAC;IAAEoB,IAAI,EAAE;EAAG,CAAC,CAAC,CAAC;EACpD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC;IAC/C;EAAA,CACD,CAAC;EACF,MAAMuB,QAAQ,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMsB,QAAQ,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIwB,SAAS;IAEb,eAAeC,cAAcA,CAAA,EAAG;MAC9B,IAAI;QACF,MAAMN,IAAI,GAAG,MAAMV,SAAS,CAAC,CAAC;QAC9BiB,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;QACjB,MAAMS,KAAK,GAAGT,IAAI,CAACU,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC;QAClCd,QAAQ,CAACY,KAAK,CAACG,IAAI,CAACC,kBAAkB,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;QAClD,MAAMC,KAAK,GAAGN,KAAK,CAACO,UAAU,CAACD,KAAK,CAAC,CAAC,CAAC;QACvC,MAAME,MAAM,GAAGR,KAAK,CAACS,SAAS,CAACC,GAAG,CAAC,CAACD,SAAS,EAAEE,KAAK,MAAM;UACxDC,CAAC,EAAE,IAAIC,IAAI,CAACJ,SAAS,GAAG,IAAI,CAAC;UAC7BK,CAAC,EAAE,CAACR,KAAK,CAACS,IAAI,CAACJ,KAAK,CAAC,EAAEL,KAAK,CAACU,IAAI,CAACL,KAAK,CAAC,EAAEL,KAAK,CAACW,GAAG,CAACN,KAAK,CAAC,EAAEL,KAAK,CAACY,KAAK,CAACP,KAAK,CAAC;QAChF,CAAC,CAAC,CAAC;QAEHrB,SAAS,CAAC6B,UAAU,IAAI;UACtB;UACA,MAAMC,aAAa,GAAG,CAAC,GAAGD,UAAU,CAAC;UACrCC,aAAa,CAAC,CAAC,CAAC,CAAC7B,IAAI,GAAG,CAAC,GAAG6B,aAAa,CAAC,CAAC,CAAC,CAAC7B,IAAI,EAAE,GAAGiB,MAAM,CAAC;UAC7D,OAAOY,aAAa;QACtB,CAAC,CAAC;QAEF,MAAMC,YAAY,GAAG1B,QAAQ,CAAC2B,OAAO;QACrC7B,eAAe,CAAC8B,WAAW,KAAK;UAC9B,GAAGA,WAAW;UACdC,KAAK,EAAE;YACL,GAAGD,WAAW,CAACC,KAAK;YACpBC,KAAK,EAAEJ,YAAY,CAAC;UACtB;QACF,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,OAAOK,KAAK,EAAE;QACd5B,OAAO,CAACC,GAAG,CAAC2B,KAAK,CAAC;MACpB;MACA9B,SAAS,GAAG+B,UAAU,CAAC9B,cAAc,EAAE,IAAI,GAAG,CAAC,CAAC;IAClD;IAEAA,cAAc,CAAC,CAAC;IAEhB,OAAO,MAAM;MACX+B,YAAY,CAAChC,SAAS,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAInC,QAAQ,CAAC4B,OAAO,EAAE;MACpB3B,QAAQ,CAAC2B,OAAO,GAAG5B,QAAQ,CAAC4B,OAAO,CAACQ,SAAS,CAAC,CAAC,CAACN,KAAK,CAACC,KAAK;IAC7D;EACF,CAAC;EAED,oBACEjD,OAAA;IAAAuD,QAAA,GAAK,QAEH,EAAC5C,KAAK,eACNX,OAAA,CAACF,KAAK;MACJ0D,OAAO,EAAExC,YAAa;MACtBH,MAAM,EAAEA,MAAO;MACf4C,IAAI,EAAC,aAAa;MAClBC,KAAK,EAAC,MAAM;MACZC,MAAM,EAAE,GAAI;MACZC,GAAG,EAAE1C,QAAS;MACd2C,SAAS,EAAER;IAAkB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvD,EAAA,CAzEuBD,MAAM;AAAAyD,EAAA,GAANzD,MAAM;AAAA,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}