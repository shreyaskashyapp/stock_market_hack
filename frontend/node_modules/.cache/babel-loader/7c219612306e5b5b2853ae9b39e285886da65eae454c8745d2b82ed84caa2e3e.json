{"ast":null,"code":"var _jsxFileName = \"/home/kashyap_sri/Desktop/Shreyas/stock_market/frontend/src/Components/bot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Bot(props) {\n  _s();\n  const [name, setName] = useState('');\n  const [action, setAction] = useState('');\n  const [sentiment, setSentiment] = useState('');\n  const [price, setPrice] = useState(0);\n  const [prevPrice, setPrevPrice] = useState(0);\n  async function fetchPrice() {\n    const res = await fetch('http://localhost:8081');\n    const stockData = await res.json();\n    const stock = stockData.chart.result[0];\n    const currentPrice = stock.meta.regularMarketPrice.toFixed(2);\n    setPrice(currentPrice);\n    if (prevPrice === 0) {\n      setPrevPrice(currentPrice); // Use currentPrice instead of price\n    }\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const url = 'https://www.alphavantage.co/query?function=NEWS_SENTIMENT&tickers=AAPL&topics=technology&apikey=Q9B5DSCXOI33L4CV.';\n      const result = await fetch(url);\n      const data = await result.json();\n      setSentiment(data.feed[0].ticker_sentiment[0].ticker_sentiment_label);\n    }\n    fetchData();\n  }, []); // Fetch sentiment only once when the component mounts\n\n  useEffect(() => {\n    if (props.timerExpired) {\n      fetchPrice().then(() => {\n        if (prevPrice > price && action === 'BUY' || prevPrice < price && action === 'SELL') {\n          console.log('BOT OP');\n        } else {\n          console.log('L BOT');\n        }\n        console.log(prevPrice);\n        console.log(price);\n      });\n    }\n  }, [props.timerExpired, prevPrice, action, price]); // Include prevPrice, action, and price as dependencies\n\n  function handleOptionChange(event) {\n    setName(event.target.value);\n    if (event.target.value === 'SENTIMENT') {\n      if (sentiment === 'Bullish' || sentiment === 'Somewhat Bullish') {\n        setAction('BUY');\n      } else {\n        setAction('SELL');\n      }\n      fetchPrice(); // Fetch the price when the option changes\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Strategy: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"strategy\",\n          id: \"strategy\",\n          onChange: handleOptionChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SENTIMENT\",\n            children: \"SENTIMENT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SMA\",\n            children: \"SMA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Bot, \"gDaNFNO53HiKUr+QN15UNApzugI=\");\n_c = Bot;\nvar _c;\n$RefreshReg$(_c, \"Bot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Bot","props","_s","name","setName","action","setAction","sentiment","setSentiment","price","setPrice","prevPrice","setPrevPrice","fetchPrice","res","fetch","stockData","json","stock","chart","result","currentPrice","meta","regularMarketPrice","toFixed","fetchData","url","data","feed","ticker_sentiment","ticker_sentiment_label","timerExpired","then","console","log","handleOptionChange","event","target","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","_c","$RefreshReg$"],"sources":["/home/kashyap_sri/Desktop/Shreyas/stock_market/frontend/src/Components/bot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Bot(props) {\n  const [name, setName] = useState('');\n  const [action, setAction] = useState('');\n  const [sentiment, setSentiment] = useState('');\n  const [price, setPrice] = useState(0);\n  const [prevPrice, setPrevPrice] = useState(0);\n\n  async function fetchPrice() {\n    const res = await fetch('http://localhost:8081');\n    const stockData = await res.json();\n    const stock = stockData.chart.result[0];\n    const currentPrice = stock.meta.regularMarketPrice.toFixed(2);\n    setPrice(currentPrice);\n    if (prevPrice === 0) {\n      setPrevPrice(currentPrice); // Use currentPrice instead of price\n    }\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const url =\n        'https://www.alphavantage.co/query?function=NEWS_SENTIMENT&tickers=AAPL&topics=technology&apikey=Q9B5DSCXOI33L4CV.';\n      const result = await fetch(url);\n      const data = await result.json();\n      setSentiment(data.feed[0].ticker_sentiment[0].ticker_sentiment_label);\n    }\n\n    fetchData();\n  }, []); // Fetch sentiment only once when the component mounts\n\n  useEffect(() => {\n    if (props.timerExpired) {\n      fetchPrice().then(() => {\n        if ((prevPrice > price && action === 'BUY') || (prevPrice < price && action === 'SELL')) {\n          console.log('BOT OP');\n        } else {\n          console.log('L BOT');\n        }\n        console.log(prevPrice);\n        console.log(price);\n      });\n    }\n  }, [props.timerExpired, prevPrice, action, price]); // Include prevPrice, action, and price as dependencies\n\n  function handleOptionChange(event) {\n    setName(event.target.value);\n    if (event.target.value === 'SENTIMENT') {\n      if (sentiment === 'Bullish' || sentiment === 'Somewhat Bullish') {\n        setAction('BUY');\n      } else {\n        setAction('SELL');\n      }\n      fetchPrice(); // Fetch the price when the option changes\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"bot-container\">\n        <div>Strategy: {name}</div>\n        <div className=\"options\">\n          <select name=\"strategy\" id=\"strategy\" onChange={handleOptionChange}>\n            <option value=\"SENTIMENT\">SENTIMENT</option>\n            <option value=\"SMA\">SMA</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}