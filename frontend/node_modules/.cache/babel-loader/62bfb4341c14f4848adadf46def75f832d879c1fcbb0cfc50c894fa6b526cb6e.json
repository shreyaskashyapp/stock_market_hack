{"ast":null,"code":"var _jsxFileName = \"/home/kashyap_sri/Desktop/Shreyas/stock_market/frontend/src/Components/bot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Bot(props) {\n  _s();\n  const [name, setName] = useState('');\n  const [action, setAction] = useState('');\n  const [sentiment, setSentiment] = useState('');\n  const [price, setPrice] = useState(0);\n  const [prevPrice, setPrevPrice] = useState(0);\n  async function fetchPrice() {\n    const res = await fetch('http://localhost:8081');\n    const stockData = await res.json();\n    const stock = stockData.chart.result[0];\n    const currentPrice = stock.meta.regularMarketPrice.toFixed(2);\n    setPrice(currentPrice);\n    const currentTime = new Date();\n    const hours = currentTime.getHours();\n    const minutes = currentTime.getMinutes();\n    const seconds = currentTime.getSeconds();\n    console.log(`Current time is: ${hours}:${minutes}:${seconds}`);\n    if (prevPrice === 0) {\n      setPrevPrice(currentPrice);\n      const currentTime = new Date();\n      const hours = currentTime.getHours();\n      const minutes = currentTime.getMinutes();\n      const seconds = currentTime.getSeconds();\n      console.log(`Current time is: ${hours}:${minutes}:${seconds}`);\n    }\n  }\n  async function fetchSma() {\n    const res = await fetch(\"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=AAPL&apikey=Q9B5DSCXOI33L4CV.\");\n    const data = await res.json();\n    return data;\n  }\n  useEffect(() => {\n    async function fetchData() {\n      const url = 'https://www.alphavantage.co/query?function=NEWS_SENTIMENT&tickers=AAPL&topics=technology&apikey=Q9B5DSCXOI33L4CV.';\n      const result = await fetch(url);\n      const data = await result.json();\n      setSentiment(data.feed[0].ticker_sentiment[0].ticker_sentiment_label);\n    }\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (props.timerExpired) {\n      fetchPrice().then(() => {\n        if (prevPrice > price && action === 'BUY' || prevPrice < price && action === 'SELL') {\n          console.log('BOT OP');\n        } else {\n          console.log('L BOT');\n        }\n        console.log(prevPrice);\n        console.log(price);\n      });\n    }\n  }, [props.timerExpired, prevPrice, action, price]);\n  function handleOptionChange(event) {\n    setName(event.target.value);\n    if (event.target.value === 'SENTIMENT') {\n      if (sentiment === 'Bullish' || sentiment === 'Somewhat Bullish') {\n        setAction('BUY');\n      } else {\n        setAction('SELL');\n      }\n      fetchPrice();\n    }\n    if (event.target.value === 'SMA') {\n      fetchSma().then(data => {\n        const values = data['Time Series (Daily)'];\n        const dates = Object.keys(values).slice(0, 20); // Get the last 20 dates\n        console.log(dates);\n        cons;\n        for (let i = 0; i < dates.length; i++) {}\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Strategy: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"strategy\",\n          id: \"strategy\",\n          onChange: handleOptionChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SENTIMENT\",\n            children: \"SENTIMENT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SMA\",\n            children: \"SMA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(Bot, \"gDaNFNO53HiKUr+QN15UNApzugI=\");\n_c = Bot;\nvar _c;\n$RefreshReg$(_c, \"Bot\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Bot","props","_s","name","setName","action","setAction","sentiment","setSentiment","price","setPrice","prevPrice","setPrevPrice","fetchPrice","res","fetch","stockData","json","stock","chart","result","currentPrice","meta","regularMarketPrice","toFixed","currentTime","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","console","log","fetchSma","data","fetchData","url","feed","ticker_sentiment","ticker_sentiment_label","timerExpired","then","handleOptionChange","event","target","value","values","dates","Object","keys","slice","cons","i","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","_c","$RefreshReg$"],"sources":["/home/kashyap_sri/Desktop/Shreyas/stock_market/frontend/src/Components/bot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Bot(props) {\n  const [name, setName] = useState('');\n  const [action, setAction] = useState('');\n  const [sentiment, setSentiment] = useState('');\n  const [price, setPrice] = useState(0);\n  const [prevPrice, setPrevPrice] = useState(0);\n\n  async function fetchPrice() {\n    const res = await fetch('http://localhost:8081');\n    const stockData = await res.json();\n    const stock = stockData.chart.result[0];\n    const currentPrice = stock.meta.regularMarketPrice.toFixed(2);\n    setPrice(currentPrice);\n    const currentTime = new Date();\n    const hours = currentTime.getHours();\n    const minutes = currentTime.getMinutes();\n    const seconds = currentTime.getSeconds();\n\n    console.log(`Current time is: ${hours}:${minutes}:${seconds}`);\n    if (prevPrice === 0) {\n      setPrevPrice(currentPrice); \n      const currentTime = new Date();\n      const hours = currentTime.getHours();\n      const minutes = currentTime.getMinutes();\n      const seconds = currentTime.getSeconds();\n\n      console.log(`Current time is: ${hours}:${minutes}:${seconds}`);\n    }\n  }\n\n  async function fetchSma() {\n    const res= await fetch(\"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=AAPL&apikey=Q9B5DSCXOI33L4CV.\")\n    const data= await res.json()\n    return data\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      const url =\n        'https://www.alphavantage.co/query?function=NEWS_SENTIMENT&tickers=AAPL&topics=technology&apikey=Q9B5DSCXOI33L4CV.';\n      const result = await fetch(url);\n      const data = await result.json();\n      setSentiment(data.feed[0].ticker_sentiment[0].ticker_sentiment_label);\n    }\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (props.timerExpired) {\n      fetchPrice().then(() => {\n        if ((prevPrice > price && action === 'BUY') || (prevPrice < price && action === 'SELL')) {\n          console.log('BOT OP');\n        } else {\n          console.log('L BOT');\n        }\n        console.log(prevPrice);\n        console.log(price);\n      });\n    }\n  }, [props.timerExpired, prevPrice, action, price]);\n\n  function handleOptionChange(event) {\n    setName(event.target.value);\n    if (event.target.value === 'SENTIMENT') {\n      if (sentiment === 'Bullish' || sentiment === 'Somewhat Bullish') {\n        setAction('BUY');\n      } else {\n        setAction('SELL');\n      }\n      fetchPrice(); \n    }\n    if (event.target.value === 'SMA') {\n      fetchSma()\n        .then((data)=>{\n            const values=data['Time Series (Daily)']\n            const dates = Object.keys(values).slice(0,20)// Get the last 20 dates\n            console.log(dates)\n            cons\n            for(let i=0;i<dates.length;i++){\n\n            }\n        })\n\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"bot-container\">\n        <div>Strategy: {name}</div>\n        <div className=\"options\">\n          <select name=\"strategy\" id=\"strategy\" onChange={handleOptionChange}>\n            <option value=\"SENTIMENT\">SENTIMENT</option>\n            <option value=\"SMA\">SMA</option>\n          </select>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}